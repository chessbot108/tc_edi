To see which letter would win a point on a certain point, we need to keep a tally of how many times each letter has been played by the opponent. However this is not the only thing we have to track of. For each turn we also need to keep a running tally of how many points the person will get with each card if that was the only card they played, and at the end we output the highest value of the three. We only have to interate through once to get the necesarry information so the complexity is O(N)

#include <iostream>
#include <fstream>
#include <string>
#include <algorithm>
using namespace std;
#define MAXN 1001

int main() {
	int N;
	cin >> N;

	string s;
	cin >> s;

	int a = 0, b = 0, c = 0;
	int ansa = 0, ansb = 0, ansc = 0;
	for (int i = 0; i < N; i++)
	{
		if (s[i] == 'A') a++;
		if (s[i] == 'B') b++;
		if (s[i] == 'C') c++;

		int max_used = max(max(a, b), c);

		if (a == max_used) ansa++;
		if (b == max_used) ansb++;
		if (c == max_used) ansc++;
	}

	cout << max(max(ansa, ansb), ansc) << "\n";
	return 0;
}
